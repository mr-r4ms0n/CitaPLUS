/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import formularios_Registros.FormPacientes;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import metodosAux.MetodosAux;
import metodosAux.RSButtonsAction;
import metodosAux.RSButtonsRenderer;
import metodosAux.StyleHeadTable;
import metodosAux.SysConfigs;
import metodosBD.MetodosBD;

/**
 *
 * @author Kevin
 */
public class Pacientes extends javax.swing.JPanel
{

    public static int tabSelecc = 1;
    //Se usa para poner bonita la cabecera de un JTable

    /**
     * Creates new form citas
     */
    public Pacientes()
    {
        initComponents();
        actualizarNumPacientes();

        //Parte de la tabla 
        listarPacientes(tblPacientes, 1, jTBuscarPaciente.getText().trim());
        jScrollPane1.getViewport().setBackground(Color.WHITE);
    }

    /**
     * Método encargado de mostrar graficamente los datos de los pacientes
     * dentro de la tabla correspondiente
     *
     * @param tabla tabla de pacientes
     * @param tab categoria seleccionada
     * @param filtro Nombre de un paciente en especifico (Para busqueda filtrada
     * y puede ser null)
     */
    public static void listarPacientes(JTable tabla, int tab, String filtro)
    {
        if (filtro == null)
        {
            filtro = "";
        }
        String[] columnas =
        {
            "id", "accion", "nombre", "apellidoPaterno", "apellidoMaterno", "sexo", "telefono", "correo", "estatusPac"
        };
        //Le damos estilo a la tabla
        MetodosAux.renderHeadTable(tabla, 30, new Color(26, 117, 159), Color.WHITE, new Font("Segoe UI Semibold", Font.BOLD, 14));
        
        //Lisstamos a los pacientes existentes que esten activos ya que es la pestaña que se selecciona
        MetodosAux.listarTablas(MetodosBD.rsListarPacientes(tab, filtro), tabla, columnas);

        //Definimos la posicion donde estara la columna que contendra los botones
        TableColumn column = tabla.getColumnModel().getColumn(1);
        column.setCellRenderer(new RSButtonsRenderer());
        String classname = "paneles.TablaContenidoPacientes";
        String metodoVer = "viewInfo";
        String metodoEditar = "editInfo";
        Object[] params =
        {
            classname, metodoVer, metodoEditar
        };
        //El 0 de aqui es de donde agarrara el parametro para activar los botones
        column.setCellEditor(new RSButtonsAction(tabla, 0, params));
    }

    /**
     * M;etodo que actualiza el titulo que se depliega en la parte inferior
     * dependiendo del tab que se seleccione
     *
     * @param tab tab seleccionado
     */
    public static void actualizarTitulo(int tab)
    {
        switch (tab)
        {
            case 1:
                JLTitulo.setText("Clientes Activos");
                JLTitulo.setForeground(SysConfigs.cl_activos);
                break;
            case 2:
                JLTitulo.setText("Clientes Inactivos");
                JLTitulo.setForeground(SysConfigs.cl_inactivos);
                break;
            case 0:
                JLTitulo.setText("Todos los Clientes");
                JLTitulo.setForeground(SysConfigs.cl_todos);
                break;

        }
    }

    public void viewInfo(Object value)
    {
        JOptionPane.showMessageDialog(null, "Ver info de ID: " + value);
    }

    public void editInfo(Object value)
    {
        JOptionPane.showMessageDialog(null, "Editar info de ID: " + value);
    }

    public static void actualizarNumPacientes()
    {
        int todos = MetodosBD.contarPacientes(0);
        int activos = MetodosBD.contarPacientes(1);
        int inactivos = MetodosBD.contarPacientes(2);

        if (todos != -1)
        {
            tabTodos.setText("Todos (" + todos + ")");
        }

        if (activos != -1)
        {
            tabActivos.setText("Activos (" + activos + ")");
        }

        if (inactivos != -1)
        {
            tabInactivos.setText("Inactivos (" + inactivos + ")");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        rSLabelTextIcon1 = new RSMaterialComponent.RSLabelTextIcon();
        rSButtonIcon_new1 = new newscomponents.RSButtonIcon_new();
        tabActivos = new newscomponents.RSButtonIcon_new();
        tabInactivos = new newscomponents.RSButtonIcon_new();
        tabTodos = new newscomponents.RSButtonIcon_new();
        JLTitulo = new RSMaterialComponent.RSLabelTextIcon();
        jTBuscarPaciente = new RSMaterialComponent.RSTextFieldMaterialIcon();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 4, 0, new java.awt.Color(26, 117, 159)));

        rSLabelTextIcon1.setForeground(new java.awt.Color(144, 224, 239));
        rSLabelTextIcon1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rSLabelTextIcon1.setText("Pacientes");
        rSLabelTextIcon1.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON);

        rSButtonIcon_new1.setBackground(new java.awt.Color(68, 165, 160));
        rSButtonIcon_new1.setText("Nuevo Paciente");
        rSButtonIcon_new1.setBackgroundHover(new java.awt.Color(178, 218, 216));
        rSButtonIcon_new1.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON_ADD);
        rSButtonIcon_new1.setRound(20);
        rSButtonIcon_new1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rSButtonIcon_new1ActionPerformed(evt);
            }
        });

        tabActivos.setBackground(new java.awt.Color(255, 255, 255));
        tabActivos.setText("Activos (0)");
        tabActivos.setBackgroundHover(new java.awt.Color(151, 194, 129));
        tabActivos.setForegroundHover(new java.awt.Color(26, 117, 159));
        tabActivos.setForegroundIcon(new java.awt.Color(233, 196, 106));
        tabActivos.setForegroundText(new java.awt.Color(26, 117, 159));
        tabActivos.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON);
        tabActivos.setRound(20);
        tabActivos.setSelected(true);
        tabActivos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tabActivosActionPerformed(evt);
            }
        });

        tabInactivos.setBackground(new java.awt.Color(255, 255, 255));
        tabInactivos.setText("Inactivos");
        tabInactivos.setBackgroundHover(new java.awt.Color(239, 146, 146));
        tabInactivos.setForegroundHover(new java.awt.Color(26, 117, 159));
        tabInactivos.setForegroundIcon(new java.awt.Color(255, 51, 51));
        tabInactivos.setForegroundText(new java.awt.Color(26, 117, 159));
        tabInactivos.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON);
        tabInactivos.setRound(20);
        tabInactivos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tabInactivosActionPerformed(evt);
            }
        });

        tabTodos.setBackground(new java.awt.Color(255, 255, 255));
        tabTodos.setText("Todos");
        tabTodos.setBackgroundHover(new java.awt.Color(144, 161, 194));
        tabTodos.setFocusable(false);
        tabTodos.setForegroundHover(new java.awt.Color(26, 117, 159));
        tabTodos.setForegroundIcon(new java.awt.Color(26, 117, 159));
        tabTodos.setForegroundText(new java.awt.Color(26, 117, 159));
        tabTodos.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON);
        tabTodos.setRound(20);
        tabTodos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tabTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rSLabelTextIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 735, Short.MAX_VALUE)
                        .addComponent(rSButtonIcon_new1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tabActivos, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabInactivos, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabActivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabInactivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabTodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSButtonIcon_new1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSLabelTextIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        JLTitulo.setForeground(new java.awt.Color(51, 153, 0));
        JLTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JLTitulo.setText("Pacientes Activos");
        JLTitulo.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.PERSON);
        JLTitulo.setSizeIcon(30.0F);

        jTBuscarPaciente.setForeground(new java.awt.Color(26, 117, 159));
        jTBuscarPaciente.setColorIcon(new java.awt.Color(26, 117, 159));
        jTBuscarPaciente.setColorMaterial(new java.awt.Color(26, 117, 159));
        jTBuscarPaciente.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jTBuscarPaciente.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        jTBuscarPaciente.setPhColor(new java.awt.Color(26, 117, 159));
        jTBuscarPaciente.setPlaceholder("Buscar paciente");
        jTBuscarPaciente.setSelectionColor(new java.awt.Color(26, 117, 159));
        jTBuscarPaciente.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTBuscarPacienteActionPerformed(evt);
            }
        });
        jTBuscarPaciente.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTBuscarPacienteKeyReleased(evt);
            }
        });

        tblPacientes.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String []
            {
                "id", "Accion", "Nombre", "Apellido Paterno", "Apellido Materno", "Sexo", "Telefono", "Correo", "Estatus"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                true, true, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblPacientes.setRowHeight(30);
        jScrollPane1.setViewportView(tblPacientes);
        if (tblPacientes.getColumnModel().getColumnCount() > 0)
        {
            tblPacientes.getColumnModel().getColumn(0).setMinWidth(0);
            tblPacientes.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblPacientes.getColumnModel().getColumn(0).setMaxWidth(0);
            tblPacientes.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JLTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rSButtonIcon_new1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rSButtonIcon_new1ActionPerformed
    {//GEN-HEADEREND:event_rSButtonIcon_new1ActionPerformed
        new FormPacientes().setVisible(true);
    }//GEN-LAST:event_rSButtonIcon_new1ActionPerformed

    private void tabTodosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tabTodosActionPerformed
    {//GEN-HEADEREND:event_tabTodosActionPerformed
        tabSelecc = 0;
        if (!tabTodos.isSelected())
        {
            tabTodos.setSelected(true);
            tabInactivos.setSelected(false);
            tabActivos.setSelected(false);
        }

        listarPacientes(tblPacientes, tabSelecc, null);
        actualizarTitulo(0);
    }//GEN-LAST:event_tabTodosActionPerformed

    private void tabInactivosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tabInactivosActionPerformed
    {//GEN-HEADEREND:event_tabInactivosActionPerformed
        tabSelecc = 2;
        if (!tabInactivos.isSelected())
        {
            tabTodos.setSelected(false);
            tabInactivos.setSelected(true);
            tabActivos.setSelected(false);
        }

        listarPacientes(tblPacientes, tabSelecc, null);
        actualizarTitulo(2);
    }//GEN-LAST:event_tabInactivosActionPerformed

    private void tabActivosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tabActivosActionPerformed
    {//GEN-HEADEREND:event_tabActivosActionPerformed
        tabSelecc = 1;
        if (!tabActivos.isSelected())
        {
            tabTodos.setSelected(false);
            tabInactivos.setSelected(false);
            tabActivos.setSelected(true);
        }

        listarPacientes(tblPacientes, tabSelecc, null);
        actualizarTitulo(1);
    }//GEN-LAST:event_tabActivosActionPerformed

    private void jTBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTBuscarPacienteActionPerformed
    {//GEN-HEADEREND:event_jTBuscarPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarPacienteActionPerformed

    private void jTBuscarPacienteKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTBuscarPacienteKeyReleased
    {//GEN-HEADEREND:event_jTBuscarPacienteKeyReleased

        System.out.println(jTBuscarPaciente.getText().trim());
        listarPacientes(tblPacientes, Pacientes.tabSelecc, jTBuscarPaciente.getText().trim());
    }//GEN-LAST:event_jTBuscarPacienteKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static RSMaterialComponent.RSLabelTextIcon JLTitulo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private RSMaterialComponent.RSTextFieldMaterialIcon jTBuscarPaciente;
    private newscomponents.RSButtonIcon_new rSButtonIcon_new1;
    private RSMaterialComponent.RSLabelTextIcon rSLabelTextIcon1;
    public static newscomponents.RSButtonIcon_new tabActivos;
    private static newscomponents.RSButtonIcon_new tabInactivos;
    private static newscomponents.RSButtonIcon_new tabTodos;
    public static javax.swing.JTable tblPacientes;
    // End of variables declaration//GEN-END:variables
}
